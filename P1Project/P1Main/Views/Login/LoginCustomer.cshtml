@model ModelsLibrary.CustomerModel

@{
  ViewData["Title"] = "Login";
}
@{
  Layout = "~/Views/Shared/_Layout_Signed_Out.cshtml";
}

<style>
  .form-style {
    display: table;
    margin: 15% auto 20px auto;
    width: 30%;
    box-shadow: black 10px 10px 10px;
    padding: 15px;
  }

  .thin-border {
    border: 1px solid black;
    border-radius: 20px;
  }

  .center {
    text-align: center;
  }
</style>

<h1>Login</h1>
<hr />
<br />

<div class="row">
  <div class="col-md-4 form-style thin-border">
    <form asp-action="VerifyLoginCustomer">
      <div asp-validation-summary="ModelOnly" class="text-danger"></div>
      <div class="form-group">
        <label asp-for="Username" class="control-label"></label>
        @if (TempData["AutofillUsername"] != null)
        {
          <input asp-for="Username" class="form-control" value="@TempData["AutofillUsername"].ToString()" />
          TempData["AutofillUsername"] = null;
        }
        else
        {
          <input asp-for="Username" class="form-control" />
        }
        <span asp-validation-for="Username" class="text-danger"></span>
      </div>
      <div class="form-group">
        <label asp-for="Password" class="control-label"></label>
        @if (TempData["AutofillPassword"] != null)
        {
          <input asp-for="Password" class="form-control" value="@TempData["AutofillPassword"].ToString()" />
          TempData["AutofillPassword"] = null;
        }
        else
        {
          <input asp-for="Password" class="form-control" />
        }
        <span asp-validation-for="Password" class="text-danger"></span>
      </div>
      @Html.HiddenFor(c => c.Username)
      @Html.HiddenFor(c => c.Password)
      @Html.AntiForgeryToken()
      <div class="form-group center">
        <input type="submit" value="Login" class="btn btn-primary" />
      </div>
    </form>
  </div>
</div>

<div class="center">
  @Html.ActionLink("Back to Landing", "Index", "Landing") | 
  @Html.ActionLink("Signup here", "CreateCustomer", "Signup")
</div>

@section Scripts {
  @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

